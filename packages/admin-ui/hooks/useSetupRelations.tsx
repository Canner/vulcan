import { useState } from 'react';
import {
  DATA_SOURCES,
  JOIN_TYPE,
  SETUP,
} from '@vulcan-sql/admin-ui/utils/enum';
import { useRouter } from 'next/router';

export default function useSetupConnection() {
  const [stepKey, setStepKey] = useState(SETUP.RECOMMEND_RELATIONS);
  const router = useRouter();

  const onBack = () => {
    if (stepKey === SETUP.DEFINE_RELATIONS) {
      setStepKey(SETUP.RECOMMEND_RELATIONS);
    } else {
      router.push('/setup/models');
    }
  };

  const onNext = (data?: { dataSource: DATA_SOURCES }) => {
    setStepKey(SETUP.DEFINE_RELATIONS);
  };

  return {
    stepKey,
    recommendRelations,
    onBack,
    onNext,
  };
}

// TODO: remove it when connecting to backend
const recommendRelations = [
  {
    name: 'Customer',
    relations: [
      {
        relationName: 'Customer_Order',
        fromField: { model: 'Customer', field: 'custkey' },
        toField: { model: 'Order', field: 'custkey' },
        relationType: JOIN_TYPE.ONE_TO_MANY,
        isAutoGenerated: true,
      },
      {
        relationName: 'Customer_trans',
        fromField: { model: 'Customer', field: 'custkey' },
        toField: { model: 'trans', field: 'custkey' },
        relationType: JOIN_TYPE.ONE_TO_MANY,
        isAutoGenerated: true,
      },
    ],
  },
  {
    name: 'Order',
    relations: [
      {
        relationName: 'Order_Lineitem',
        fromField: { model: 'Order', field: 'orderkey' },
        toField: { model: 'Lineitem', field: 'orderkey' },
        relationType: JOIN_TYPE.ONE_TO_MANY,
        isAutoGenerated: true,
      },
    ],
  },
];
