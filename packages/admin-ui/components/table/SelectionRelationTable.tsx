import { forwardRef } from 'react';
import styled from 'styled-components';
import { Col, Row, RowProps, Table } from 'antd';
import type { ColumnsType, TableProps } from 'antd/es/table';
import { JOIN_TYPE } from '@vulcan-sql/admin-ui/utils/enum';
import { ModelIcon } from '@vulcan-sql/admin-ui/utils/icons';

const StyledTable = styled(Table)`
  .ant-table-thead > tr > th {
    color: var(--gray-7);
    background-color: white;
  }
`;

const StyledRow = styled(Row).attrs<{
  $isRowSelection: boolean;
}>((props) => ({
  className: `${props.$isRowSelection ? '' : 'ml-1'}`,
}))`` as React.ForwardRefExoticComponent<
  RowProps & React.RefAttributes<HTMLDivElement> & { $isRowSelection: boolean }
>;

interface ModelFieldProps {
  model: string;
  field: string;
}

export interface RelationsDataType {
  fromField: ModelFieldProps;
  isAutoGenerated: boolean;
  relationName: string;
  relationType: JOIN_TYPE;
  toField: ModelFieldProps;
}

interface SelectionRelationTableProps {
  columns: ColumnsType<RelationsDataType>;
  dataSource: RelationsDataType[];
  enableRowSelection?: boolean;
  extra?: React.ReactNode;
  onChange?: (value: any | null) => void;
  title: string;
}

function SelectionRelationTable(
  props: SelectionRelationTableProps,
  ref: React.Ref<any>
) {
  const { columns, dataSource, extra, enableRowSelection, onChange, title } =
    props;

  const isRowSelection = Boolean(enableRowSelection);

  const rowSelection: TableProps<RelationsDataType>['rowSelection'] =
    isRowSelection
      ? {
          type: 'checkbox',
          onChange: (
            _selectedRowKeys: React.Key[],
            selectedRows: RelationsDataType[]
          ) => {
            onChange && onChange(selectedRows);
          },
        }
      : undefined;

  return (
    <StyledTable
      ref={ref}
      className="ant-table-has-header"
      columns={columns}
      dataSource={dataSource}
      rowKey={(record) => JSON.stringify(record)}
      rowSelection={rowSelection}
      title={() => (
        <StyledRow wrap={false} gutter={8} $isRowSelection={isRowSelection}>
          <Col flex="1 0">
            <ModelIcon className="pr-2" style={{ fontSize: 16 }} />
            {title}
          </Col>
          <Col flex="none">{extra}</Col>
        </StyledRow>
      )}
      pagination={false}
    />
  );
}

export default forwardRef(SelectionRelationTable);
