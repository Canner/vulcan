version: 2.1

executors:
  node-executor:
    working_directory: ~/repo
    docker:
      # Jest has issues with node > 16.11.0, please stick node version until the issues are resolved
      # https://github.com/facebook/jest/issues/11956
      - image: cimg/node:16.10.0

# Set some environment variables like the base SHA of PRs ...etc.
set_env: &set_env
  name: Setup Environment Variables
  command: |

    echo 'Fetching Base Commit from GitHub'
    # Get the PR number from env for different kinds of PR
    echo 'export CIRCLE_PR_NUMBER="${CIRCLE_PR_NUMBER:-${CIRCLE_PULL_REQUEST##*/}}"' >> $BASH_ENV
    source $BASH_ENV
    # Obtain the SHA via Github API
    echo "export CIRCLE_PR_BASE_SHA=`curl -s https://api.github.com/repos/${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}/pulls/${CIRCLE_PR_NUMBER} | jq -r '.base.sha'`" >> $BASH_ENV
    # Set the affected args for nx affect xxx commands
    echo 'export AFFECTED_ARGS="--base=${CIRCLE_PR_BASE_SHA}"' >> $BASH_ENV
    # Set the memory size for node processes
    echo 'export NODE_OPTIONS="--max_old_space_size=6144"' >> $BASH_ENV
    source $BASH_ENV
    echo $AFFECTED_ARGS

# Retrieve node_modules and the module cache from Circle CI storage.
yarn_cache: &yarn_cache
  keys:
    - node-deps-node16-{{ checksum "yarn.lock" }}
    # fallback to using the latest cache if no exact match is found
    - node-deps-node16-

# Install node modules via yarn with the frozen lock file
yarn_install: &yarn_install
  name: Install Dependencies
  command: yarn install --frozen-lockfile --non-interactive

# Install code cov uploader and check the signature
# https://docs.codecov.com/docs/codecov-uploader
codecov_install: &codecov_install
  name: Install codecov
  command: |
    if [ ! -f ./codecov ]; then
    curl -Os https://uploader.codecov.io/v0.1.0_4653/linux/codecov
    curl https://keybase.io/codecovsecurity/pgp_keys.asc | gpg --no-default-keyring --keyring trustedkeys.gpg --import # One-time step
    curl -Os https://uploader.codecov.io/latest/linux/codecov
    curl -Os https://uploader.codecov.io/latest/linux/codecov.SHA256SUM
    curl -Os https://uploader.codecov.io/latest/linux/codecov.SHA256SUM.sig
    gpgv codecov.SHA256SUM.sig codecov.SHA256SUM
    shasum -a 256 -c codecov.SHA256SUM
    chmod +x codecov
    fi

jobs:
  install:
    executor: node-executor
    steps:
      - checkout
      - restore_cache:
          <<: *yarn_cache
      - run:
          <<: *yarn_install
      - save_cache:
          key: node-deps-node16-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache
            - node_modules
      - restore_cache:
          keys:
            - codecov-0.1.0_4653
      - run:
          <<: *codecov_install
      - save_cache:
          key: codecov-0.1.0_4653
          paths:
            - ./codecov

  lint:
    executor: node-executor
    steps:
      - checkout
      - run:
          <<: *set_env
      - restore_cache:
          <<: *yarn_cache
      - run: yarn nx workspace-lint
      - run: yarn nx affected --target=lint --head=HEAD --maxWarnings=0 ${AFFECTED_ARGS}

  test:
    executor: node-executor
    steps:
      - checkout
      - run:
          <<: *set_env
      - restore_cache:
          <<: *yarn_cache
      - restore_cache:
          keys:
            - codecov-0.1.0_4653
      - run: yarn nx affected --target=test --head=HEAD --ci --coverage --maxWorkers=2 --coverageReporters=lcov ${AFFECTED_ARGS}
        # --maxWorkers=2 is required because we'll run virtual machine with 32 cores CPU (with actually 4 CPI), jest spawns lots of workers if we don't fix the worker size.
        # https://support.circleci.com/hc/en-us/articles/360005442714-Your-test-tools-are-smart-and-that-s-a-problem-Learn-about-when-optimization-goes-wrong-
      - run: ./codecov -t ${CODECOV_TOKEN}

workflows:
  version: 2
  pr-check:
    jobs:
      - install
      - lint:
          requires:
            - install
      - test:
          requires:
            - install
