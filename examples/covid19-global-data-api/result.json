{"templates":{"countries":"(() => {function root(env, context, frame, runtime, cb) {\nvar lineno = 0;\nvar colno = 0;\nvar output = \"\";\ntry {\nvar parentTemplate = null;\nenv.getExtension(\"req\")[\"__run\"](context,\"__wrapped__builder\",\"true\",function(cb) {\nif(!cb) { cb = function(err) { if(err) { throw err; }}}\nvar t_1 = \"\";t_1 += \"SELECT DISTINCT Country, Country_code, WHO_region FROM read_csv_auto('WHO-COVID-19-global-data.csv')\";\ncb(null, t_1);\n;\nreturn t_1;\n}\n, function(t_3,t_2) {\nif(t_3) { cb(t_3); return; }\noutput += runtime.suppressValue(t_2, true && env.opts.autoescape);\nif(parentTemplate) {\nparentTemplate.rootRenderFunc(env, context, frame, runtime, cb);\n} else {\ncb(null, output);\n}\n});\n} catch (e) {\n  cb(runtime.handleError(e, lineno, colno));\n}\n}\nreturn {\nroot: root\n};\n})()","max_cases":"(() => {function root(env, context, frame, runtime, cb) {\nvar lineno = 0;\nvar colno = 0;\nvar output = \"\";\ntry {\nvar parentTemplate = null;\nenv.getExtension(\"req\")[\"__run\"](context,\"__wrapped__builder\",\"true\",function(cb) {\nif(!cb) { cb = function(err) { if(err) { throw err; }}}\nvar t_1 = \"\";var t_2;\nt_2 = runtime.memberLookup((runtime.memberLookup((runtime.contextOrFrameLookup(context, frame, \"context\")),\"params\")),\"group_by\");\nframe.set(\"group_by\", t_2, true);\nif(frame.topLevel) {\ncontext.setVariable(\"group_by\", t_2);\n}\nif(frame.topLevel) {\ncontext.addExport(\"group_by\", t_2);\n}\ncb(null, t_1);\n;\nreturn t_1;\n}\n,function(cb) {\nif(!cb) { cb = function(err) { if(err) { throw err; }}}\nvar t_3 = \"\";t_3 += \"\\n\\n\";\ncb(null, t_3);\n;\nreturn t_3;\n}\n,function(cb) {\nif(!cb) { cb = function(err) { if(err) { throw err; }}}\nvar t_4 = \"\";(function(cb) {if(runtime.contextOrFrameLookup(context, frame, \"group_by\") && runtime.contextOrFrameLookup(context, frame, \"group_by\") != \"WHO_region\" && runtime.contextOrFrameLookup(context, frame, \"group_by\") != \"Country_code\") {\nt_4 += \"\\n    \";\nenv.getExtension(\"error\")[\"__run\"](context,\"group_by should be WHO_region or Country_code\",3,7, function(t_6,t_5) {\nif(t_6) { cb(t_6); return; }\nt_4 += runtime.suppressValue(t_5, true && env.opts.autoescape);\nt_4 += \"\\n\";\ncb()});\n}\nelse {\ncb()}\n})(function(t_7) {\nif(t_7) { cb(t_7); return; }cb(null, t_4);\n});\nreturn t_4;\n}\n,function(cb) {\nif(!cb) { cb = function(err) { if(err) { throw err; }}}\nvar t_8 = \"\";t_8 += \"\\n\\n\";\ncb(null, t_8);\n;\nreturn t_8;\n}\n,function(cb) {\nif(!cb) { cb = function(err) { if(err) { throw err; }}}\nvar t_9 = \"\";(function(cb) {if(runtime.contextOrFrameLookup(context, frame, \"group_by\") && runtime.contextOrFrameLookup(context, frame, \"group_by\") == \"WHO_region\") {\nt_9 += \"\\n    SELECT WHO_region, SUM(New_cases) as Total_cases\\n    FROM read_csv_auto('WHO-COVID-19-global-data.csv') \\n    WHERE \\n        Date_reported >= \";\nenv.getFilter(\"sanitize\").call(context, runtime.memberLookup((runtime.memberLookup((runtime.contextOrFrameLookup(context, frame, \"context\")),\"params\")),\"start_date\"), function(t_10,hole_0) {\nif(t_10) { cb(t_10); return; }\nt_9 += runtime.suppressValue(hole_0, env.opts.autoescape);\nt_9 += \" AND \\n        Date_reported <= \";\nenv.getFilter(\"sanitize\").call(context, runtime.memberLookup((runtime.memberLookup((runtime.contextOrFrameLookup(context, frame, \"context\")),\"params\")),\"end_date\"), function(t_11,hole_1) {\nif(t_11) { cb(t_11); return; }\nt_9 += runtime.suppressValue(hole_1, env.opts.autoescape);\nt_9 += \"\\n    GROUP BY WHO_region\\n    ORDER BY Total_cases DESC\\n    LIMIT \";\nenv.getFilter(\"sanitize\").call(context, runtime.memberLookup((runtime.memberLookup((runtime.contextOrFrameLookup(context, frame, \"context\")),\"params\")),\"top_n\"), function(t_12,hole_2) {\nif(t_12) { cb(t_12); return; }\nt_9 += runtime.suppressValue(hole_2, env.opts.autoescape);\nt_9 += \"\\n\";\ncb()})})});\n}\nelse {\nt_9 += \"\\n    SELECT Country_code, ANY_VALUE(Country), SUM(New_cases) as Total_cases\\n    FROM read_csv_auto('WHO-COVID-19-global-data.csv') \\n    WHERE \\n        Date_reported >= \";\nenv.getFilter(\"sanitize\").call(context, runtime.memberLookup((runtime.memberLookup((runtime.contextOrFrameLookup(context, frame, \"context\")),\"params\")),\"start_date\"), function(t_13,hole_3) {\nif(t_13) { cb(t_13); return; }\nt_9 += runtime.suppressValue(hole_3, env.opts.autoescape);\nt_9 += \" AND \\n        Date_reported <= \";\nenv.getFilter(\"sanitize\").call(context, runtime.memberLookup((runtime.memberLookup((runtime.contextOrFrameLookup(context, frame, \"context\")),\"params\")),\"end_date\"), function(t_14,hole_4) {\nif(t_14) { cb(t_14); return; }\nt_9 += runtime.suppressValue(hole_4, env.opts.autoescape);\nt_9 += \"\\n    GROUP BY Country_code\\n    ORDER BY Total_cases DESC\\n    LIMIT \";\nenv.getFilter(\"sanitize\").call(context, runtime.memberLookup((runtime.memberLookup((runtime.contextOrFrameLookup(context, frame, \"context\")),\"params\")),\"top_n\"), function(t_15,hole_5) {\nif(t_15) { cb(t_15); return; }\nt_9 += runtime.suppressValue(hole_5, env.opts.autoescape);\nt_9 += \"\\n\";\ncb()})})});\n}\n})(function(t_16) {\nif(t_16) { cb(t_16); return; }cb(null, t_9);\n});\nreturn t_9;\n}\n, function(t_18,t_17) {\nif(t_18) { cb(t_18); return; }\noutput += runtime.suppressValue(t_17, true && env.opts.autoescape);\nif(parentTemplate) {\nparentTemplate.rootRenderFunc(env, context, frame, runtime, cb);\n} else {\ncb(null, output);\n}\n});\n} catch (e) {\n  cb(runtime.handleError(e, lineno, colno));\n}\n}\nreturn {\nroot: root\n};\n})()","max_deaths":"(() => {function root(env, context, frame, runtime, cb) {\nvar lineno = 0;\nvar colno = 0;\nvar output = \"\";\ntry {\nvar parentTemplate = null;\nenv.getExtension(\"req\")[\"__run\"](context,\"__wrapped__builder\",\"true\",function(cb) {\nif(!cb) { cb = function(err) { if(err) { throw err; }}}\nvar t_1 = \"\";var t_2;\nt_2 = runtime.memberLookup((runtime.memberLookup((runtime.contextOrFrameLookup(context, frame, \"context\")),\"params\")),\"group_by\");\nframe.set(\"group_by\", t_2, true);\nif(frame.topLevel) {\ncontext.setVariable(\"group_by\", t_2);\n}\nif(frame.topLevel) {\ncontext.addExport(\"group_by\", t_2);\n}\ncb(null, t_1);\n;\nreturn t_1;\n}\n,function(cb) {\nif(!cb) { cb = function(err) { if(err) { throw err; }}}\nvar t_3 = \"\";t_3 += \"\\n\\n\";\ncb(null, t_3);\n;\nreturn t_3;\n}\n,function(cb) {\nif(!cb) { cb = function(err) { if(err) { throw err; }}}\nvar t_4 = \"\";(function(cb) {if(runtime.contextOrFrameLookup(context, frame, \"group_by\") && runtime.contextOrFrameLookup(context, frame, \"group_by\") != \"WHO_region\" && runtime.contextOrFrameLookup(context, frame, \"group_by\") != \"Country_code\") {\nt_4 += \"\\n    \";\nenv.getExtension(\"error\")[\"__run\"](context,\"group_by should be WHO_region or Country_code\",3,7, function(t_6,t_5) {\nif(t_6) { cb(t_6); return; }\nt_4 += runtime.suppressValue(t_5, true && env.opts.autoescape);\nt_4 += \"\\n\";\ncb()});\n}\nelse {\ncb()}\n})(function(t_7) {\nif(t_7) { cb(t_7); return; }cb(null, t_4);\n});\nreturn t_4;\n}\n,function(cb) {\nif(!cb) { cb = function(err) { if(err) { throw err; }}}\nvar t_8 = \"\";t_8 += \"\\n\\n\";\ncb(null, t_8);\n;\nreturn t_8;\n}\n,function(cb) {\nif(!cb) { cb = function(err) { if(err) { throw err; }}}\nvar t_9 = \"\";(function(cb) {if(runtime.contextOrFrameLookup(context, frame, \"group_by\") && runtime.contextOrFrameLookup(context, frame, \"group_by\") == \"WHO_region\") {\nt_9 += \"\\n    SELECT WHO_region, SUM(New_deaths) as Total_deaths\\n    FROM read_csv_auto('WHO-COVID-19-global-data.csv') \\n    WHERE \\n        Date_reported >= \";\nenv.getFilter(\"sanitize\").call(context, runtime.memberLookup((runtime.memberLookup((runtime.contextOrFrameLookup(context, frame, \"context\")),\"params\")),\"start_date\"), function(t_10,hole_6) {\nif(t_10) { cb(t_10); return; }\nt_9 += runtime.suppressValue(hole_6, env.opts.autoescape);\nt_9 += \" AND \\n        Date_reported <= \";\nenv.getFilter(\"sanitize\").call(context, runtime.memberLookup((runtime.memberLookup((runtime.contextOrFrameLookup(context, frame, \"context\")),\"params\")),\"end_date\"), function(t_11,hole_7) {\nif(t_11) { cb(t_11); return; }\nt_9 += runtime.suppressValue(hole_7, env.opts.autoescape);\nt_9 += \"\\n    GROUP BY WHO_region\\n    ORDER BY Total_deaths DESC\\n    LIMIT \";\nenv.getFilter(\"sanitize\").call(context, runtime.memberLookup((runtime.memberLookup((runtime.contextOrFrameLookup(context, frame, \"context\")),\"params\")),\"top_n\"), function(t_12,hole_8) {\nif(t_12) { cb(t_12); return; }\nt_9 += runtime.suppressValue(hole_8, env.opts.autoescape);\nt_9 += \"\\n\";\ncb()})})});\n}\nelse {\nt_9 += \"\\n    SELECT Country_code, ANY_VALUE(Country), SUM(New_deaths) as Total_deaths\\n    FROM read_csv_auto('WHO-COVID-19-global-data.csv') \\n    WHERE \\n        Date_reported >= \";\nenv.getFilter(\"sanitize\").call(context, runtime.memberLookup((runtime.memberLookup((runtime.contextOrFrameLookup(context, frame, \"context\")),\"params\")),\"start_date\"), function(t_13,hole_9) {\nif(t_13) { cb(t_13); return; }\nt_9 += runtime.suppressValue(hole_9, env.opts.autoescape);\nt_9 += \" AND \\n        Date_reported <= \";\nenv.getFilter(\"sanitize\").call(context, runtime.memberLookup((runtime.memberLookup((runtime.contextOrFrameLookup(context, frame, \"context\")),\"params\")),\"end_date\"), function(t_14,hole_10) {\nif(t_14) { cb(t_14); return; }\nt_9 += runtime.suppressValue(hole_10, env.opts.autoescape);\nt_9 += \"\\n    GROUP BY Country_code\\n    ORDER BY Total_deaths DESC\\n    LIMIT \";\nenv.getFilter(\"sanitize\").call(context, runtime.memberLookup((runtime.memberLookup((runtime.contextOrFrameLookup(context, frame, \"context\")),\"params\")),\"top_n\"), function(t_15,hole_11) {\nif(t_15) { cb(t_15); return; }\nt_9 += runtime.suppressValue(hole_11, env.opts.autoescape);\nt_9 += \"\\n\";\ncb()})})});\n}\n})(function(t_16) {\nif(t_16) { cb(t_16); return; }cb(null, t_9);\n});\nreturn t_9;\n}\n, function(t_18,t_17) {\nif(t_18) { cb(t_18); return; }\noutput += runtime.suppressValue(t_17, true && env.opts.autoescape);\nif(parentTemplate) {\nparentTemplate.rootRenderFunc(env, context, frame, runtime, cb);\n} else {\ncb(null, output);\n}\n});\n} catch (e) {\n  cb(runtime.handleError(e, lineno, colno));\n}\n}\nreturn {\nroot: root\n};\n})()","min_cases":"(() => {function root(env, context, frame, runtime, cb) {\nvar lineno = 0;\nvar colno = 0;\nvar output = \"\";\ntry {\nvar parentTemplate = null;\nenv.getExtension(\"req\")[\"__run\"](context,\"__wrapped__builder\",\"true\",function(cb) {\nif(!cb) { cb = function(err) { if(err) { throw err; }}}\nvar t_1 = \"\";var t_2;\nt_2 = runtime.memberLookup((runtime.memberLookup((runtime.contextOrFrameLookup(context, frame, \"context\")),\"params\")),\"group_by\");\nframe.set(\"group_by\", t_2, true);\nif(frame.topLevel) {\ncontext.setVariable(\"group_by\", t_2);\n}\nif(frame.topLevel) {\ncontext.addExport(\"group_by\", t_2);\n}\ncb(null, t_1);\n;\nreturn t_1;\n}\n,function(cb) {\nif(!cb) { cb = function(err) { if(err) { throw err; }}}\nvar t_3 = \"\";t_3 += \"\\n\\n\";\ncb(null, t_3);\n;\nreturn t_3;\n}\n,function(cb) {\nif(!cb) { cb = function(err) { if(err) { throw err; }}}\nvar t_4 = \"\";(function(cb) {if(runtime.contextOrFrameLookup(context, frame, \"group_by\") && runtime.contextOrFrameLookup(context, frame, \"group_by\") != \"WHO_region\" && runtime.contextOrFrameLookup(context, frame, \"group_by\") != \"Country_code\") {\nt_4 += \"\\n    \";\nenv.getExtension(\"error\")[\"__run\"](context,\"group_by should be WHO_region or Country_code\",3,7, function(t_6,t_5) {\nif(t_6) { cb(t_6); return; }\nt_4 += runtime.suppressValue(t_5, true && env.opts.autoescape);\nt_4 += \"\\n\";\ncb()});\n}\nelse {\ncb()}\n})(function(t_7) {\nif(t_7) { cb(t_7); return; }cb(null, t_4);\n});\nreturn t_4;\n}\n,function(cb) {\nif(!cb) { cb = function(err) { if(err) { throw err; }}}\nvar t_8 = \"\";t_8 += \"\\n\\n\";\ncb(null, t_8);\n;\nreturn t_8;\n}\n,function(cb) {\nif(!cb) { cb = function(err) { if(err) { throw err; }}}\nvar t_9 = \"\";(function(cb) {if(runtime.contextOrFrameLookup(context, frame, \"group_by\") && runtime.contextOrFrameLookup(context, frame, \"group_by\") == \"WHO_region\") {\nt_9 += \"\\n    SELECT WHO_region, SUM(New_cases) as Total_cases\\n    FROM read_csv_auto('WHO-COVID-19-global-data.csv') \\n    WHERE \\n        Date_reported >= \";\nenv.getFilter(\"sanitize\").call(context, runtime.memberLookup((runtime.memberLookup((runtime.contextOrFrameLookup(context, frame, \"context\")),\"params\")),\"start_date\"), function(t_10,hole_12) {\nif(t_10) { cb(t_10); return; }\nt_9 += runtime.suppressValue(hole_12, env.opts.autoescape);\nt_9 += \" AND \\n        Date_reported <= \";\nenv.getFilter(\"sanitize\").call(context, runtime.memberLookup((runtime.memberLookup((runtime.contextOrFrameLookup(context, frame, \"context\")),\"params\")),\"end_date\"), function(t_11,hole_13) {\nif(t_11) { cb(t_11); return; }\nt_9 += runtime.suppressValue(hole_13, env.opts.autoescape);\nt_9 += \"\\n    GROUP BY WHO_region\\n    ORDER BY Total_cases ASC\\n    LIMIT \";\nenv.getFilter(\"sanitize\").call(context, runtime.memberLookup((runtime.memberLookup((runtime.contextOrFrameLookup(context, frame, \"context\")),\"params\")),\"top_n\"), function(t_12,hole_14) {\nif(t_12) { cb(t_12); return; }\nt_9 += runtime.suppressValue(hole_14, env.opts.autoescape);\nt_9 += \"\\n\";\ncb()})})});\n}\nelse {\nt_9 += \"\\n    SELECT Country_code, ANY_VALUE(Country), SUM(New_cases) as Total_cases\\n    FROM read_csv_auto('WHO-COVID-19-global-data.csv') \\n    WHERE \\n        Date_reported >= \";\nenv.getFilter(\"sanitize\").call(context, runtime.memberLookup((runtime.memberLookup((runtime.contextOrFrameLookup(context, frame, \"context\")),\"params\")),\"start_date\"), function(t_13,hole_15) {\nif(t_13) { cb(t_13); return; }\nt_9 += runtime.suppressValue(hole_15, env.opts.autoescape);\nt_9 += \" AND \\n        Date_reported <= \";\nenv.getFilter(\"sanitize\").call(context, runtime.memberLookup((runtime.memberLookup((runtime.contextOrFrameLookup(context, frame, \"context\")),\"params\")),\"end_date\"), function(t_14,hole_16) {\nif(t_14) { cb(t_14); return; }\nt_9 += runtime.suppressValue(hole_16, env.opts.autoescape);\nt_9 += \"\\n    GROUP BY Country_code\\n    ORDER BY Total_cases ASC\\n    LIMIT \";\nenv.getFilter(\"sanitize\").call(context, runtime.memberLookup((runtime.memberLookup((runtime.contextOrFrameLookup(context, frame, \"context\")),\"params\")),\"top_n\"), function(t_15,hole_17) {\nif(t_15) { cb(t_15); return; }\nt_9 += runtime.suppressValue(hole_17, env.opts.autoescape);\nt_9 += \"\\n\";\ncb()})})});\n}\n})(function(t_16) {\nif(t_16) { cb(t_16); return; }cb(null, t_9);\n});\nreturn t_9;\n}\n, function(t_18,t_17) {\nif(t_18) { cb(t_18); return; }\noutput += runtime.suppressValue(t_17, true && env.opts.autoescape);\nif(parentTemplate) {\nparentTemplate.rootRenderFunc(env, context, frame, runtime, cb);\n} else {\ncb(null, output);\n}\n});\n} catch (e) {\n  cb(runtime.handleError(e, lineno, colno));\n}\n}\nreturn {\nroot: root\n};\n})()","min_deaths":"(() => {function root(env, context, frame, runtime, cb) {\nvar lineno = 0;\nvar colno = 0;\nvar output = \"\";\ntry {\nvar parentTemplate = null;\nenv.getExtension(\"req\")[\"__run\"](context,\"__wrapped__builder\",\"true\",function(cb) {\nif(!cb) { cb = function(err) { if(err) { throw err; }}}\nvar t_1 = \"\";var t_2;\nt_2 = runtime.memberLookup((runtime.memberLookup((runtime.contextOrFrameLookup(context, frame, \"context\")),\"params\")),\"group_by\");\nframe.set(\"group_by\", t_2, true);\nif(frame.topLevel) {\ncontext.setVariable(\"group_by\", t_2);\n}\nif(frame.topLevel) {\ncontext.addExport(\"group_by\", t_2);\n}\ncb(null, t_1);\n;\nreturn t_1;\n}\n,function(cb) {\nif(!cb) { cb = function(err) { if(err) { throw err; }}}\nvar t_3 = \"\";t_3 += \"\\n\\n\";\ncb(null, t_3);\n;\nreturn t_3;\n}\n,function(cb) {\nif(!cb) { cb = function(err) { if(err) { throw err; }}}\nvar t_4 = \"\";(function(cb) {if(runtime.contextOrFrameLookup(context, frame, \"group_by\") && runtime.contextOrFrameLookup(context, frame, \"group_by\") != \"WHO_region\" && runtime.contextOrFrameLookup(context, frame, \"group_by\") != \"Country_code\") {\nt_4 += \"\\n    \";\nenv.getExtension(\"error\")[\"__run\"](context,\"group_by should be WHO_region or Country_code\",3,7, function(t_6,t_5) {\nif(t_6) { cb(t_6); return; }\nt_4 += runtime.suppressValue(t_5, true && env.opts.autoescape);\nt_4 += \"\\n\";\ncb()});\n}\nelse {\ncb()}\n})(function(t_7) {\nif(t_7) { cb(t_7); return; }cb(null, t_4);\n});\nreturn t_4;\n}\n,function(cb) {\nif(!cb) { cb = function(err) { if(err) { throw err; }}}\nvar t_8 = \"\";t_8 += \"\\n\\n\";\ncb(null, t_8);\n;\nreturn t_8;\n}\n,function(cb) {\nif(!cb) { cb = function(err) { if(err) { throw err; }}}\nvar t_9 = \"\";(function(cb) {if(runtime.contextOrFrameLookup(context, frame, \"group_by\") && runtime.contextOrFrameLookup(context, frame, \"group_by\") == \"WHO_region\") {\nt_9 += \"\\n    SELECT WHO_region, SUM(New_deaths) as Total_deaths\\n    FROM read_csv_auto('WHO-COVID-19-global-data.csv') \\n    WHERE \\n        Date_reported >= \";\nenv.getFilter(\"sanitize\").call(context, runtime.memberLookup((runtime.memberLookup((runtime.contextOrFrameLookup(context, frame, \"context\")),\"params\")),\"start_date\"), function(t_10,hole_18) {\nif(t_10) { cb(t_10); return; }\nt_9 += runtime.suppressValue(hole_18, env.opts.autoescape);\nt_9 += \" AND \\n        Date_reported <= \";\nenv.getFilter(\"sanitize\").call(context, runtime.memberLookup((runtime.memberLookup((runtime.contextOrFrameLookup(context, frame, \"context\")),\"params\")),\"end_date\"), function(t_11,hole_19) {\nif(t_11) { cb(t_11); return; }\nt_9 += runtime.suppressValue(hole_19, env.opts.autoescape);\nt_9 += \"\\n    GROUP BY WHO_region\\n    ORDER BY Total_deaths ASC\\n    LIMIT \";\nenv.getFilter(\"sanitize\").call(context, runtime.memberLookup((runtime.memberLookup((runtime.contextOrFrameLookup(context, frame, \"context\")),\"params\")),\"top_n\"), function(t_12,hole_20) {\nif(t_12) { cb(t_12); return; }\nt_9 += runtime.suppressValue(hole_20, env.opts.autoescape);\nt_9 += \"\\n\";\ncb()})})});\n}\nelse {\nt_9 += \"\\n    SELECT Country_code, ANY_VALUE(Country), SUM(New_deaths) as Total_deaths\\n    FROM read_csv_auto('WHO-COVID-19-global-data.csv') \\n    WHERE \\n        Date_reported >= \";\nenv.getFilter(\"sanitize\").call(context, runtime.memberLookup((runtime.memberLookup((runtime.contextOrFrameLookup(context, frame, \"context\")),\"params\")),\"start_date\"), function(t_13,hole_21) {\nif(t_13) { cb(t_13); return; }\nt_9 += runtime.suppressValue(hole_21, env.opts.autoescape);\nt_9 += \" AND \\n        Date_reported <= \";\nenv.getFilter(\"sanitize\").call(context, runtime.memberLookup((runtime.memberLookup((runtime.contextOrFrameLookup(context, frame, \"context\")),\"params\")),\"end_date\"), function(t_14,hole_22) {\nif(t_14) { cb(t_14); return; }\nt_9 += runtime.suppressValue(hole_22, env.opts.autoescape);\nt_9 += \"\\n    GROUP BY Country_code\\n    ORDER BY Total_deaths ASC\\n    LIMIT \";\nenv.getFilter(\"sanitize\").call(context, runtime.memberLookup((runtime.memberLookup((runtime.contextOrFrameLookup(context, frame, \"context\")),\"params\")),\"top_n\"), function(t_15,hole_23) {\nif(t_15) { cb(t_15); return; }\nt_9 += runtime.suppressValue(hole_23, env.opts.autoescape);\nt_9 += \"\\n\";\ncb()})})});\n}\n})(function(t_16) {\nif(t_16) { cb(t_16); return; }cb(null, t_9);\n});\nreturn t_9;\n}\n, function(t_18,t_17) {\nif(t_18) { cb(t_18); return; }\noutput += runtime.suppressValue(t_17, true && env.opts.autoescape);\nif(parentTemplate) {\nparentTemplate.rootRenderFunc(env, context, frame, runtime, cb);\n} else {\ncb(null, output);\n}\n});\n} catch (e) {\n  cb(runtime.handleError(e, lineno, colno));\n}\n}\nreturn {\nroot: root\n};\n})()","reports":"(() => {function root(env, context, frame, runtime, cb) {\nvar lineno = 0;\nvar colno = 0;\nvar output = \"\";\ntry {\nvar parentTemplate = null;\nenv.getExtension(\"req\")[\"__run\"](context,\"__wrapped__builder\",\"true\",function(cb) {\nif(!cb) { cb = function(err) { if(err) { throw err; }}}\nvar t_1 = \"\";var t_2;\nt_2 = runtime.memberLookup((runtime.memberLookup((runtime.contextOrFrameLookup(context, frame, \"context\")),\"params\")),\"country_code\");\nframe.set(\"country_codes\", t_2, true);\nif(frame.topLevel) {\ncontext.setVariable(\"country_codes\", t_2);\n}\nif(frame.topLevel) {\ncontext.addExport(\"country_codes\", t_2);\n}\ncb(null, t_1);\n;\nreturn t_1;\n}\n,function(cb) {\nif(!cb) { cb = function(err) { if(err) { throw err; }}}\nvar t_3 = \"\";t_3 += \"\\n\\n\";\ncb(null, t_3);\n;\nreturn t_3;\n}\n,function(cb) {\nif(!cb) { cb = function(err) { if(err) { throw err; }}}\nvar t_4 = \"\";(function(cb) {if(runtime.contextOrFrameLookup(context, frame, \"country_codes\")) {\nt_4 += \"\\n    SELECT * FROM read_csv_auto('WHO-COVID-19-global-data.csv')\\n    WHERE \\n        Date_reported >= \";\nenv.getFilter(\"sanitize\").call(context, runtime.memberLookup((runtime.memberLookup((runtime.contextOrFrameLookup(context, frame, \"context\")),\"params\")),\"start_date\"), function(t_5,hole_24) {\nif(t_5) { cb(t_5); return; }\nt_4 += runtime.suppressValue(hole_24, env.opts.autoescape);\nt_4 += \" AND \\n        Date_reported <= \";\nenv.getFilter(\"sanitize\").call(context, runtime.memberLookup((runtime.memberLookup((runtime.contextOrFrameLookup(context, frame, \"context\")),\"params\")),\"end_date\"), function(t_6,hole_25) {\nif(t_6) { cb(t_6); return; }\nt_4 += runtime.suppressValue(hole_25, env.opts.autoescape);\nt_4 += \" AND\\n        Country_code IN (SELECT UNNEST(string_split(\";\nenv.getFilter(\"sanitize\").call(context, runtime.contextOrFrameLookup(context, frame, \"country_codes\"), function(t_7,hole_26) {\nif(t_7) { cb(t_7); return; }\nt_4 += runtime.suppressValue(hole_26, env.opts.autoescape);\nt_4 += \", ',')))\\n\";\ncb()})})});\n}\nelse {\nt_4 += \"\\n    SELECT * FROM read_csv_auto('WHO-COVID-19-global-data.csv')\\n    WHERE\\n        Date_reported >= \";\nenv.getFilter(\"sanitize\").call(context, runtime.memberLookup((runtime.memberLookup((runtime.contextOrFrameLookup(context, frame, \"context\")),\"params\")),\"start_date\"), function(t_8,hole_27) {\nif(t_8) { cb(t_8); return; }\nt_4 += runtime.suppressValue(hole_27, env.opts.autoescape);\nt_4 += \" AND \\n        Date_reported <= \";\nenv.getFilter(\"sanitize\").call(context, runtime.memberLookup((runtime.memberLookup((runtime.contextOrFrameLookup(context, frame, \"context\")),\"params\")),\"end_date\"), function(t_9,hole_28) {\nif(t_9) { cb(t_9); return; }\nt_4 += runtime.suppressValue(hole_28, env.opts.autoescape);\nt_4 += \"\\n\";\ncb()})});\n}\n})(function(t_10) {\nif(t_10) { cb(t_10); return; }cb(null, t_4);\n});\nreturn t_4;\n}\n,function(cb) {\nif(!cb) { cb = function(err) { if(err) { throw err; }}}\nvar t_11 = \"\";t_11 += \"\\n\";\ncb(null, t_11);\n;\nreturn t_11;\n}\n, function(t_13,t_12) {\nif(t_13) { cb(t_13); return; }\noutput += runtime.suppressValue(t_12, true && env.opts.autoescape);\nif(parentTemplate) {\nparentTemplate.rootRenderFunc(env, context, frame, runtime, cb);\n} else {\ncb(null, output);\n}\n});\n} catch (e) {\n  cb(runtime.handleError(e, lineno, colno));\n}\n}\nreturn {\nroot: root\n};\n})()","who_regions":"(() => {function root(env, context, frame, runtime, cb) {\nvar lineno = 0;\nvar colno = 0;\nvar output = \"\";\ntry {\nvar parentTemplate = null;\nenv.getExtension(\"req\")[\"__run\"](context,\"__wrapped__builder\",\"true\",function(cb) {\nif(!cb) { cb = function(err) { if(err) { throw err; }}}\nvar t_1 = \"\";t_1 += \"SELECT DISTINCT WHO_region FROM read_csv_auto('WHO-COVID-19-global-data.csv')\";\ncb(null, t_1);\n;\nreturn t_1;\n}\n, function(t_3,t_2) {\nif(t_3) { cb(t_3); return; }\noutput += runtime.suppressValue(t_2, true && env.opts.autoescape);\nif(parentTemplate) {\nparentTemplate.rootRenderFunc(env, context, frame, runtime, cb);\n} else {\ncb(null, output);\n}\n});\n} catch (e) {\n  cb(runtime.handleError(e, lineno, colno));\n}\n}\nreturn {\nroot: root\n};\n})()"},"schemas":[{"sourceName":"countries","urlPath":"/countries","description":"Get a list of countries and their country codes","response":[{"name":"Country","description":"country name","type":"STRING"},{"name":"Country_code","description":"country code","type":"STRING"},{"name":"WHO_region","description":"WHO region, e.g. \"AFRO\" for Africa, \"AMRO\" for Americas, \"EMRO\" for Eastern Mediterranean, \"EURO\" for Europe, \"SEARO\" for South-East Asia, \"WPRO\" for Western Pacific","type":"STRING"}],"profiles":["duckdb"],"metadata":{"error.vulcan.com":{"errorCodes":[]},"builder.vulcan.com":{"finalBuilderName":"FINAL_BUILDER"},"parameter.vulcan.com":[],"filter.vulcan.com":[],"cache.vulcan.com":{"isUsedTag":false}},"request":[],"templateSource":"countries","errors":[]},{"sourceName":"max_cases","urlPath":"/max_cases","description":"Get a list of countries or WHO regions that have the most cases on a given date range","request":[{"fieldName":"start_date","description":"YYYY-MM-DD","fieldIn":"QUERY","validators":[{"name":"required","args":{}},{"name":"required","args":{}}],"constraints":[{"__type":"Required"}],"type":"STRING"},{"fieldName":"end_date","description":"YYYY-MM-DD","fieldIn":"QUERY","validators":[{"name":"required","args":{}},{"name":"required","args":{}}],"constraints":[{"__type":"Required"}],"type":"STRING"},{"fieldName":"top_n","description":"Top N","fieldIn":"QUERY","validators":[{"name":"required","args":{}},{"name":"required","args":{}}],"constraints":[{"__type":"Required"}],"type":"STRING"},{"fieldName":"group_by","description":"Group by, e.g. \"WHO_region\", \"Country_code\"; default value is \"Country_code\"","fieldIn":"QUERY","validators":[],"constraints":[],"type":"STRING"}],"response":[{"name":"Country_code","description":"country code","type":"STRING"},{"name":"Country","description":"country name","type":"STRING"},{"name":"WHO_region","description":"WHO region, e.g. \"AFRO\" for Africa, \"AMRO\" for Americas, \"EMRO\" for Eastern Mediterranean, \"EURO\" for Europe, \"SEARO\" for South-East Asia, \"WPRO\" for Western Pacific","type":"STRING"},{"name":"Total_cases","description":"total cases","type":"NUMBER"}],"profiles":["duckdb"],"metadata":{"error.vulcan.com":{"errorCodes":[{"code":"group_by should be WHO_region or Country_code","locations":[{"lineNo":3,"columnNo":13}]}]},"builder.vulcan.com":{"finalBuilderName":"FINAL_BUILDER"},"parameter.vulcan.com":[{"name":"group_by","locations":[{"lineNo":0,"columnNo":32}],"validators":[]},{"name":"start_date","locations":[{"lineNo":10,"columnNo":42},{"lineNo":19,"columnNo":42}],"validators":[{"name":"required","args":{}},{"name":"required","args":{}}]},{"name":"end_date","locations":[{"lineNo":11,"columnNo":42},{"lineNo":20,"columnNo":42}],"validators":[{"name":"required","args":{}},{"name":"required","args":{}}]},{"name":"top_n","locations":[{"lineNo":14,"columnNo":27},{"lineNo":23,"columnNo":27}],"validators":[{"name":"required","args":{}},{"name":"required","args":{}}]}],"filter.vulcan.com":["sanitize"],"cache.vulcan.com":{"isUsedTag":false}},"templateSource":"max_cases","errors":[{"code":"group_by should be WHO_region or Country_code","message":""}]},{"sourceName":"max_deaths","urlPath":"/max_deaths","description":"Get a list of countries or WHO regions that have the most deaths on a given date range","request":[{"fieldName":"start_date","description":"YYYY-MM-DD","fieldIn":"QUERY","validators":[{"name":"required","args":{}},{"name":"required","args":{}}],"constraints":[{"__type":"Required"}],"type":"STRING"},{"fieldName":"end_date","description":"YYYY-MM-DD","fieldIn":"QUERY","validators":[{"name":"required","args":{}},{"name":"required","args":{}}],"constraints":[{"__type":"Required"}],"type":"STRING"},{"fieldName":"top_n","description":"Top N","fieldIn":"QUERY","validators":[{"name":"required","args":{}},{"name":"required","args":{}}],"constraints":[{"__type":"Required"}],"type":"STRING"},{"fieldName":"group_by","description":"Group by, e.g. \"WHO_region\", \"Country_code\"; default value is \"Country_code\"","fieldIn":"QUERY","validators":[],"constraints":[],"type":"STRING"}],"response":[{"name":"Country_code","description":"country code","type":"STRING"},{"name":"Country","description":"country name","type":"STRING"},{"name":"WHO_region","description":"WHO region, e.g. \"AFRO\" for Africa, \"AMRO\" for Americas, \"EMRO\" for Eastern Mediterranean, \"EURO\" for Europe, \"SEARO\" for South-East Asia, \"WPRO\" for Western Pacific","type":"STRING"},{"name":"Total_deaths","description":"total deaths","type":"NUMBER"}],"profiles":["duckdb"],"metadata":{"error.vulcan.com":{"errorCodes":[{"code":"group_by should be WHO_region or Country_code","locations":[{"lineNo":3,"columnNo":13},{"lineNo":3,"columnNo":13}]}]},"builder.vulcan.com":{"finalBuilderName":"FINAL_BUILDER"},"parameter.vulcan.com":[{"name":"group_by","locations":[{"lineNo":0,"columnNo":32}],"validators":[]},{"name":"start_date","locations":[{"lineNo":10,"columnNo":42},{"lineNo":19,"columnNo":42}],"validators":[{"name":"required","args":{}},{"name":"required","args":{}}]},{"name":"end_date","locations":[{"lineNo":11,"columnNo":42},{"lineNo":20,"columnNo":42}],"validators":[{"name":"required","args":{}},{"name":"required","args":{}}]},{"name":"top_n","locations":[{"lineNo":14,"columnNo":27},{"lineNo":23,"columnNo":27}],"validators":[{"name":"required","args":{}},{"name":"required","args":{}}]}],"filter.vulcan.com":["sanitize"],"cache.vulcan.com":{"isUsedTag":false}},"templateSource":"max_deaths","errors":[{"code":"group_by should be WHO_region or Country_code","message":""}]},{"sourceName":"min_cases","urlPath":"/min_cases","description":"Get a list of countries or WHO regions that have the minimum cases on a given date range","request":[{"fieldName":"start_date","description":"YYYY-MM-DD","fieldIn":"QUERY","validators":[{"name":"required","args":{}},{"name":"required","args":{}}],"constraints":[{"__type":"Required"}],"type":"STRING"},{"fieldName":"end_date","description":"YYYY-MM-DD","fieldIn":"QUERY","validators":[{"name":"required","args":{}},{"name":"required","args":{}}],"constraints":[{"__type":"Required"}],"type":"STRING"},{"fieldName":"top_n","description":"Top N","fieldIn":"QUERY","validators":[{"name":"required","args":{}},{"name":"required","args":{}}],"constraints":[{"__type":"Required"}],"type":"STRING"},{"fieldName":"group_by","description":"Group by, e.g. \"WHO_region\", \"Country_code\"; default value is \"Country_code\"","fieldIn":"QUERY","validators":[],"constraints":[],"type":"STRING"}],"response":[{"name":"Country_code","description":"country code","type":"STRING"},{"name":"Country","description":"country name","type":"STRING"},{"name":"WHO_region","description":"WHO region, e.g. \"AFRO\" for Africa, \"AMRO\" for Americas, \"EMRO\" for Eastern Mediterranean, \"EURO\" for Europe, \"SEARO\" for South-East Asia, \"WPRO\" for Western Pacific","type":"STRING"},{"name":"Total_cases","description":"total cases","type":"NUMBER"}],"profiles":["duckdb"],"metadata":{"error.vulcan.com":{"errorCodes":[{"code":"group_by should be WHO_region or Country_code","locations":[{"lineNo":3,"columnNo":13},{"lineNo":3,"columnNo":13},{"lineNo":3,"columnNo":13}]}]},"builder.vulcan.com":{"finalBuilderName":"FINAL_BUILDER"},"parameter.vulcan.com":[{"name":"group_by","locations":[{"lineNo":0,"columnNo":32}],"validators":[]},{"name":"start_date","locations":[{"lineNo":10,"columnNo":42},{"lineNo":19,"columnNo":42}],"validators":[{"name":"required","args":{}},{"name":"required","args":{}}]},{"name":"end_date","locations":[{"lineNo":11,"columnNo":42},{"lineNo":20,"columnNo":42}],"validators":[{"name":"required","args":{}},{"name":"required","args":{}}]},{"name":"top_n","locations":[{"lineNo":14,"columnNo":27},{"lineNo":23,"columnNo":27}],"validators":[{"name":"required","args":{}},{"name":"required","args":{}}]}],"filter.vulcan.com":["sanitize"],"cache.vulcan.com":{"isUsedTag":false}},"templateSource":"min_cases","errors":[{"code":"group_by should be WHO_region or Country_code","message":""}]},{"sourceName":"min_deaths","urlPath":"/min_deaths","description":"Get a list of countries or WHO regions that have the minimum deaths on a given date range","request":[{"fieldName":"start_date","description":"YYYY-MM-DD","fieldIn":"QUERY","validators":[{"name":"required","args":{}},{"name":"required","args":{}}],"constraints":[{"__type":"Required"}],"type":"STRING"},{"fieldName":"end_date","description":"YYYY-MM-DD","fieldIn":"QUERY","validators":[{"name":"required","args":{}},{"name":"required","args":{}}],"constraints":[{"__type":"Required"}],"type":"STRING"},{"fieldName":"top_n","description":"Top N","fieldIn":"QUERY","validators":[{"name":"required","args":{}},{"name":"required","args":{}}],"constraints":[{"__type":"Required"}],"type":"STRING"},{"fieldName":"group_by","description":"Group by, e.g. \"WHO_region\", \"Country_code\"; default value is \"Country_code\"","fieldIn":"QUERY","validators":[],"constraints":[],"type":"STRING"}],"response":[{"name":"Country_code","description":"country code","type":"STRING"},{"name":"Country","description":"country name","type":"STRING"},{"name":"WHO_region","description":"WHO region, e.g. \"AFRO\" for Africa, \"AMRO\" for Americas, \"EMRO\" for Eastern Mediterranean, \"EURO\" for Europe, \"SEARO\" for South-East Asia, \"WPRO\" for Western Pacific","type":"STRING"},{"name":"Total_deaths","description":"total deaths","type":"NUMBER"}],"profiles":["duckdb"],"metadata":{"error.vulcan.com":{"errorCodes":[{"code":"group_by should be WHO_region or Country_code","locations":[{"lineNo":3,"columnNo":13},{"lineNo":3,"columnNo":13},{"lineNo":3,"columnNo":13},{"lineNo":3,"columnNo":13}]}]},"builder.vulcan.com":{"finalBuilderName":"FINAL_BUILDER"},"parameter.vulcan.com":[{"name":"group_by","locations":[{"lineNo":0,"columnNo":32}],"validators":[]},{"name":"start_date","locations":[{"lineNo":10,"columnNo":42},{"lineNo":19,"columnNo":42}],"validators":[{"name":"required","args":{}},{"name":"required","args":{}}]},{"name":"end_date","locations":[{"lineNo":11,"columnNo":42},{"lineNo":20,"columnNo":42}],"validators":[{"name":"required","args":{}},{"name":"required","args":{}}]},{"name":"top_n","locations":[{"lineNo":14,"columnNo":27},{"lineNo":23,"columnNo":27}],"validators":[{"name":"required","args":{}},{"name":"required","args":{}}]}],"filter.vulcan.com":["sanitize"],"cache.vulcan.com":{"isUsedTag":false}},"templateSource":"min_deaths","errors":[{"code":"group_by should be WHO_region or Country_code","message":""}]},{"sourceName":"reports","urlPath":"/reports","description":"Get a list of COVID-19 reports by country and date","request":[{"fieldName":"start_date","description":"YYYY-MM-DD","fieldIn":"QUERY","validators":[{"name":"required","args":{}},{"name":"required","args":{}}],"constraints":[{"__type":"Required"}],"type":"STRING"},{"fieldName":"end_date","description":"YYYY-MM-DD","fieldIn":"QUERY","validators":[{"name":"required","args":{}},{"name":"required","args":{}}],"constraints":[{"__type":"Required"}],"type":"STRING"},{"fieldName":"country_code","description":"country code, a comma-separated string","fieldIn":"QUERY","validators":[],"constraints":[],"type":"STRING"}],"response":[{"name":"Date_reported","description":"date of report","type":"STRING"},{"name":"Country_code","description":"country code","type":"STRING"},{"name":"Country","description":"country name","type":"STRING"},{"name":"WHO_region","description":"WHO region, e.g. \"AFRO\" for Africa, \"AMRO\" for Americas, \"EMRO\" for Eastern Mediterranean, \"EURO\" for Europe, \"SEARO\" for South-East Asia, \"WPRO\" for Western Pacific","type":"STRING"},{"name":"New_cases","description":"new cases","type":"NUMBER"},{"name":"Cumulative_cases","description":"cumulative cases","type":"NUMBER"},{"name":"New_deaths","description":"new deaths","type":"NUMBER"},{"name":"Cumulative_deaths","description":"cumulative deaths","type":"NUMBER"}],"profiles":["duckdb"],"metadata":{"error.vulcan.com":{"errorCodes":[{"code":"group_by should be WHO_region or Country_code","locations":[{"lineNo":3,"columnNo":13},{"lineNo":3,"columnNo":13},{"lineNo":3,"columnNo":13},{"lineNo":3,"columnNo":13}]}]},"builder.vulcan.com":{"finalBuilderName":"FINAL_BUILDER"},"parameter.vulcan.com":[{"name":"country_code","locations":[{"lineNo":0,"columnNo":37}],"validators":[]},{"name":"start_date","locations":[{"lineNo":5,"columnNo":42},{"lineNo":11,"columnNo":42}],"validators":[{"name":"required","args":{}},{"name":"required","args":{}}]},{"name":"end_date","locations":[{"lineNo":6,"columnNo":42},{"lineNo":12,"columnNo":42}],"validators":[{"name":"required","args":{}},{"name":"required","args":{}}]}],"filter.vulcan.com":["sanitize"],"cache.vulcan.com":{"isUsedTag":false}},"templateSource":"reports","errors":[{"code":"group_by should be WHO_region or Country_code","message":""}]},{"sourceName":"who_regions","urlPath":"/who_regions","description":"Get a list of WHO regions","response":[{"name":"WHO_region","description":"WHO region, e.g. \"AFRO\" for Africa, \"AMRO\" for Americas, \"EMRO\" for Eastern Mediterranean, \"EURO\" for Europe, \"SEARO\" for South-East Asia, \"WPRO\" for Western Pacific","type":"STRING"}],"profiles":["duckdb"],"metadata":{"error.vulcan.com":{"errorCodes":[{"code":"group_by should be WHO_region or Country_code","locations":[{"lineNo":3,"columnNo":13},{"lineNo":3,"columnNo":13},{"lineNo":3,"columnNo":13},{"lineNo":3,"columnNo":13}]}]},"builder.vulcan.com":{"finalBuilderName":"FINAL_BUILDER"},"parameter.vulcan.com":[],"filter.vulcan.com":["sanitize"],"cache.vulcan.com":{"isUsedTag":false}},"request":[],"templateSource":"who_regions","errors":[{"code":"group_by should be WHO_region or Country_code","message":""}]}],"specs":{"oas3":{"openapi":"3.0.3","info":{"title":"covid19-global-data-api","version":"0.2.0","description":"A starter Vulcan project"},"paths":{"/countries":{"get":{"operationId":"get/countries","summary":"/countries","description":"Get a list of countries and their country codes","responses":{"200":{"description":"The default response","content":{"application/json":{"schema":{"type":"object","properties":{"Country":{"description":"country name","type":"string"},"Country_code":{"description":"country code","type":"string"},"WHO_region":{"description":"WHO region, e.g. \"AFRO\" for Africa, \"AMRO\" for Americas, \"EMRO\" for Eastern Mediterranean, \"EURO\" for Europe, \"SEARO\" for South-East Asia, \"WPRO\" for Western Pacific","type":"string"}}}},"text/csv":{"schema":{"type":"string"}}}},"5XX":{"description":"Server error"}},"parameters":[]}},"/max_cases":{"get":{"operationId":"get/max_cases","summary":"/max_cases","description":"Get a list of countries or WHO regions that have the most cases on a given date range","responses":{"200":{"description":"The default response","content":{"application/json":{"schema":{"type":"object","properties":{"Country_code":{"description":"country code","type":"string"},"Country":{"description":"country name","type":"string"},"WHO_region":{"description":"WHO region, e.g. \"AFRO\" for Africa, \"AMRO\" for Americas, \"EMRO\" for Eastern Mediterranean, \"EURO\" for Europe, \"SEARO\" for South-East Asia, \"WPRO\" for Western Pacific","type":"string"},"Total_cases":{"description":"total cases","type":"number"}}}},"text/csv":{"schema":{"type":"string"}}}},"400":{"description":"Client error","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"type":"string"},"message":{"type":"string"}}},"examples":{"group_by should be WHO_region or Country_code":{"description":"","value":{"code":"group_by should be WHO_region or Country_code","message":""}}}}}},"5XX":{"description":"Server error"}},"parameters":[{"name":"start_date","in":"query","schema":{"type":"string"},"required":true,"description":"YYYY-MM-DD"},{"name":"end_date","in":"query","schema":{"type":"string"},"required":true,"description":"YYYY-MM-DD"},{"name":"top_n","in":"query","schema":{"type":"string"},"required":true,"description":"Top N"},{"name":"group_by","in":"query","schema":{"type":"string"},"required":false,"description":"Group by, e.g. \"WHO_region\", \"Country_code\"; default value is \"Country_code\""}]}},"/max_deaths":{"get":{"operationId":"get/max_deaths","summary":"/max_deaths","description":"Get a list of countries or WHO regions that have the most deaths on a given date range","responses":{"200":{"description":"The default response","content":{"application/json":{"schema":{"type":"object","properties":{"Country_code":{"description":"country code","type":"string"},"Country":{"description":"country name","type":"string"},"WHO_region":{"description":"WHO region, e.g. \"AFRO\" for Africa, \"AMRO\" for Americas, \"EMRO\" for Eastern Mediterranean, \"EURO\" for Europe, \"SEARO\" for South-East Asia, \"WPRO\" for Western Pacific","type":"string"},"Total_deaths":{"description":"total deaths","type":"number"}}}},"text/csv":{"schema":{"type":"string"}}}},"400":{"description":"Client error","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"type":"string"},"message":{"type":"string"}}},"examples":{"group_by should be WHO_region or Country_code":{"description":"","value":{"code":"group_by should be WHO_region or Country_code","message":""}}}}}},"5XX":{"description":"Server error"}},"parameters":[{"name":"start_date","in":"query","schema":{"type":"string"},"required":true,"description":"YYYY-MM-DD"},{"name":"end_date","in":"query","schema":{"type":"string"},"required":true,"description":"YYYY-MM-DD"},{"name":"top_n","in":"query","schema":{"type":"string"},"required":true,"description":"Top N"},{"name":"group_by","in":"query","schema":{"type":"string"},"required":false,"description":"Group by, e.g. \"WHO_region\", \"Country_code\"; default value is \"Country_code\""}]}},"/min_cases":{"get":{"operationId":"get/min_cases","summary":"/min_cases","description":"Get a list of countries or WHO regions that have the minimum cases on a given date range","responses":{"200":{"description":"The default response","content":{"application/json":{"schema":{"type":"object","properties":{"Country_code":{"description":"country code","type":"string"},"Country":{"description":"country name","type":"string"},"WHO_region":{"description":"WHO region, e.g. \"AFRO\" for Africa, \"AMRO\" for Americas, \"EMRO\" for Eastern Mediterranean, \"EURO\" for Europe, \"SEARO\" for South-East Asia, \"WPRO\" for Western Pacific","type":"string"},"Total_cases":{"description":"total cases","type":"number"}}}},"text/csv":{"schema":{"type":"string"}}}},"400":{"description":"Client error","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"type":"string"},"message":{"type":"string"}}},"examples":{"group_by should be WHO_region or Country_code":{"description":"","value":{"code":"group_by should be WHO_region or Country_code","message":""}}}}}},"5XX":{"description":"Server error"}},"parameters":[{"name":"start_date","in":"query","schema":{"type":"string"},"required":true,"description":"YYYY-MM-DD"},{"name":"end_date","in":"query","schema":{"type":"string"},"required":true,"description":"YYYY-MM-DD"},{"name":"top_n","in":"query","schema":{"type":"string"},"required":true,"description":"Top N"},{"name":"group_by","in":"query","schema":{"type":"string"},"required":false,"description":"Group by, e.g. \"WHO_region\", \"Country_code\"; default value is \"Country_code\""}]}},"/min_deaths":{"get":{"operationId":"get/min_deaths","summary":"/min_deaths","description":"Get a list of countries or WHO regions that have the minimum deaths on a given date range","responses":{"200":{"description":"The default response","content":{"application/json":{"schema":{"type":"object","properties":{"Country_code":{"description":"country code","type":"string"},"Country":{"description":"country name","type":"string"},"WHO_region":{"description":"WHO region, e.g. \"AFRO\" for Africa, \"AMRO\" for Americas, \"EMRO\" for Eastern Mediterranean, \"EURO\" for Europe, \"SEARO\" for South-East Asia, \"WPRO\" for Western Pacific","type":"string"},"Total_deaths":{"description":"total deaths","type":"number"}}}},"text/csv":{"schema":{"type":"string"}}}},"400":{"description":"Client error","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"type":"string"},"message":{"type":"string"}}},"examples":{"group_by should be WHO_region or Country_code":{"description":"","value":{"code":"group_by should be WHO_region or Country_code","message":""}}}}}},"5XX":{"description":"Server error"}},"parameters":[{"name":"start_date","in":"query","schema":{"type":"string"},"required":true,"description":"YYYY-MM-DD"},{"name":"end_date","in":"query","schema":{"type":"string"},"required":true,"description":"YYYY-MM-DD"},{"name":"top_n","in":"query","schema":{"type":"string"},"required":true,"description":"Top N"},{"name":"group_by","in":"query","schema":{"type":"string"},"required":false,"description":"Group by, e.g. \"WHO_region\", \"Country_code\"; default value is \"Country_code\""}]}},"/reports":{"get":{"operationId":"get/reports","summary":"/reports","description":"Get a list of COVID-19 reports by country and date","responses":{"200":{"description":"The default response","content":{"application/json":{"schema":{"type":"object","properties":{"Date_reported":{"description":"date of report","type":"string"},"Country_code":{"description":"country code","type":"string"},"Country":{"description":"country name","type":"string"},"WHO_region":{"description":"WHO region, e.g. \"AFRO\" for Africa, \"AMRO\" for Americas, \"EMRO\" for Eastern Mediterranean, \"EURO\" for Europe, \"SEARO\" for South-East Asia, \"WPRO\" for Western Pacific","type":"string"},"New_cases":{"description":"new cases","type":"number"},"Cumulative_cases":{"description":"cumulative cases","type":"number"},"New_deaths":{"description":"new deaths","type":"number"},"Cumulative_deaths":{"description":"cumulative deaths","type":"number"}}}},"text/csv":{"schema":{"type":"string"}}}},"400":{"description":"Client error","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"type":"string"},"message":{"type":"string"}}},"examples":{"group_by should be WHO_region or Country_code":{"description":"","value":{"code":"group_by should be WHO_region or Country_code","message":""}}}}}},"5XX":{"description":"Server error"}},"parameters":[{"name":"start_date","in":"query","schema":{"type":"string"},"required":true,"description":"YYYY-MM-DD"},{"name":"end_date","in":"query","schema":{"type":"string"},"required":true,"description":"YYYY-MM-DD"},{"name":"country_code","in":"query","schema":{"type":"string"},"required":false,"description":"country code, a comma-separated string"}]}},"/who_regions":{"get":{"operationId":"get/who_regions","summary":"/who_regions","description":"Get a list of WHO regions","responses":{"200":{"description":"The default response","content":{"application/json":{"schema":{"type":"object","properties":{"WHO_region":{"description":"WHO region, e.g. \"AFRO\" for Africa, \"AMRO\" for Americas, \"EMRO\" for Eastern Mediterranean, \"EURO\" for Europe, \"SEARO\" for South-East Asia, \"WPRO\" for Western Pacific","type":"string"}}}},"text/csv":{"schema":{"type":"string"}}}},"400":{"description":"Client error","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"type":"string"},"message":{"type":"string"}}},"examples":{"group_by should be WHO_region or Country_code":{"description":"","value":{"code":"group_by should be WHO_region or Country_code","message":""}}}}}},"5XX":{"description":"Server error"}},"parameters":[]}}}}}}